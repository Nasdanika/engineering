engineering-module:
  name: Generation Adapters
  path: gen
  dependencies:
    - engineering://nasdanika/modules/engineering/modules/model
    - engineering://nasdanika/modules/html/modules/flow     
  issues:
    appearance:
      name: Configurable appearance
      description: |+2
        Showing/hiding/placement - child, navigation, section, .../styling - icons.
        Perhaps appearance model and not specific just to engineering, but generic and handled at EObjectActionProvider with extensibility.
        References with eKeys shall make it easy to build such a model - class(ifier) and feature keys. 
        More complex with operations, but it is an edge case.        
        Modal actions. Cascading appearance. Ability to define Bootstrap appearance - extend?  
        Custom properties, e.g. to show/hide columns in issue tables.        
    rest-api:
      name: REST API
      description: |+2
        Generate static cross-refrencing JSON files which can be used for programmatic access by, say, single-page applications. For example, an issues table with filtering and sorting or by charts.   
        May also generate a JavaScript API on top of the JSON "dumb" data - read-only properties returning promises.
        Ideally, the JSON should be loadable back to the model. Also may publish XMI at the root of the generated site - an alternative to Maven repository.      
    help-dialogs:
      name: Help dialogs
      description: Markdown help resource. Superscript question mark if present.    
    in-browser-editing:
      name: In-browsing editing feature
      description: Collaboration, inner source. Create pull request. Related to Data Provenance.
   