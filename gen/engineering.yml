engineering-module:
   name: Gen
   path: gen
   issues:
     - name: Document the model
       description: Model and dialogs  
       increment: nasdanika://increments/2021/children/q2/children/apr
       effort: 4 
     - name: Experts reference
       description: Have expertise, but not authority.
       effort: 3 
     - name: Features and releases
       description: Basic support. Add issues for visualizations (gantt) and aggregations. Issue to release association.
       releases: 
         - nasdanika://modules/engineering/releases/2021/4/4
       increment: nasdanika://increments/2021/children/q2/children/apr
       contributes-to:
         - nasdanika://modules/engineering/features/test
       effort: 3 
       status: nasdanika://issue-statuses/done
     - name: Filterable and sortable table component - use KnockoutJs 
       description: |+2
         May start with a method in ModelElementViewAction. Then extract into a component which takes descriptors. 
         Introduce EMF components or descriptor adaptor/wrapper including collections wrapper.
         Also, along the same lines - single object properties table using the existing descriptor table components.
         Inject scripts into the head if head consumer is available or below or above the table otherwise.  
       effort: 4 
     - name: Notes
       description: Loading from the model, show in the view.
       increment: nasdanika://increments/2021/children/q2/children/apr
       effort: 0.5 
     - name: Issue effort, cost, benefit, and benefit to cost ratio derived attributes, isWorkable(Increment) function.
       description: |+2
         Actual effort and cost - sum of effort and cost from notes. 
         Also percentage completed - own and effective. progress and effectiveProgress derived attributes.
         Total effort and cost - actual plus in the effort/cost field - estimated remaining (zero if done).
         Effective effort and cost - actual and total (3 effective costs and efforts) - includes all not done children and all not done requirements.
         Introduce EngineeredCapability with derived costs, efforts, and benefits. Issue, feature, and release extend it.
         Effective benefit, total benefit - collected in the opposite way as requirements - in the direction of parent and requiredBy.
         Use HashSet accumulator to avoid loops and scanning issues more than once - derived references allRequirements, allRequiredBy
         Update issue tables with the new attributes.
         Engineer rate - to convert effort to cost. Default is 1.
         Plan can override rate per increment, iherits from engineer if not overridden.  
       increment: nasdanika://increments/2021/children/q2/children/apr
       effort: 4 
     - name: Display effort and cost
       description: Issues table and section display aggregated costs, efforts, benefit and benefit to cost ratio. Per increment and total for engineer, engineered element, category, etc.  
       increment: nasdanika://increments/2021/children/q2/children/apr
       effort: 2 
     - name: Validations
       description: Issue - scheduled for an increment before one of required issues increments. Add isBefore() and isAfter() functions to increment - move code from view action.  
       effort: 2 
     - name: Release, feature
       description: Add releases and features to the model, implement view actions with issue sections and totals tables.   
       effort: 4 
     - name: Persona goals, activities, journeys
       description: Modeling, diagram, weights, derive benefit.   
       effort: 8 
     - name: Issue diagram
       description: State diagram showing nesting, dependencies, completion status - light green, workability status - gray if not workable. Clickable.
       effort: 3         
     - name: Planning and scheduling
       description: |+2
         Plan - contains capacity per icrement per engineer and cost budget. Scheduler allocates issues to increments to achieve maximum effective benefit per cost ratio for the increment. 
         How to handle spill-over issues?
         Benefit discount rate - how much more the present benefit is valued over future benefit. Related to it - even benefit stream as well as allocation to categories.          
       effort: 8         
     - name: Journey to engineering export
       description: |+2
         During generation create YAML engineering model from journey definition with back-links to definitions. 
         Activities and journeys map to issues, personas map to engineers. 
         I.e. journey is a template for an engineering model which then can be executed and tracked.  
     - name: MavenModule extends Module?
       description: Group ID, artifact ID, repository if not default.
     - name: Refactor to output HTML App model
       description: More flexible as it would allow to construct larger sites from multiple models. Requires implementing bootstra table and list of actions component.
     - name: Journey inheritance
       description: superJourney and subJourneys links the first is a proxy, the second is derived. Opposite. Override by path match. Would also need allElements derived reference - own and inherited.
     - name: Engineer view
       description: Modules - list of actions. Increments as a hierarhical table (with indents) and stats - total number of issues, by status.
     - name: Issue status appearance or just color?
       description: E.g. blocked in danger.
     - name: Issue and increment visualizations
       description: Issue - pert chart (state diagram) with color coding of statuses. Increment - gantt or gantts for issues and also for features and releases. Release as a milestone.
     - name: Announce initial release
       description: Presentation, video, post on LinkedIn. After restructuring the Nasdanika site to use Engineering. A tree of innovation - seed and grow your ideas and products.
     - name: Issue and increment visualizations
       description: Issue - pert chart (state diagram) with color coding of statuses. Increment - gantt or gantts for issues and also for features and releases. Release as a milestone.
     - name: URI copy to clipboard button similar to GitHub clone URL. 
       description: Or a click on a cell copies to clipboard - change cursor and show tooltip.
     - name: Aliasing
       description: |+2
         In a multi-model scenario all elements with the same URI will be logically merged and will appear as a single object in the UI.
         That single object may be explicitly designated by setting "primary" attribute to true computed as the first object found in the hierarchy by the content iterator.
     - name: Increment summary tables completion percentages
       description: Use done flag and remaining effort/logged effort. For the increment - engieers. Children. Self, total - self and children.  
     - name: Configurable colors
       description: Methods in the factory to obtain colors. Remove parent and resolver from constructors.
   